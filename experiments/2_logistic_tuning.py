### TUNE LOGISTIC REGRESSION MODEL USING K-FOLD CV AND EXHAUSTIVE SEARCH ###

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from src.data_processing import feature_selection

# def grid_search(train_data, arrays, names):
#     """
#     Conduct grid search over defined parameters and save results as pandas df
#     Params:
#     arrays -- list-like of arrays defining search space
#     names -- names (of hyperparameters) corresponding to arrays
#     """
#     # Create grid to search over
#     grid = exhaustive_grid(arrays=arrays, names=names)
#     results = grid.copy()

#     # Add column to save results
#     results['accuracy'] = np.zeros(grid.shape[0])
#     results['f1_score'] = np.zeros(grid.shape[0])
#     results['precision'] = np.zeros(grid.shape[0])
#     results['recall'] = np.zeros(grid.shape[0])
#     results['auc_roc'] = np.zeros(grid.shape[0])

#     # Loop over grid
#     for i in range(grid.shape[0]):
#         # Select i_th pairs of hyperparameters
#         params_i = grid.iloc[i, :]

#     return
