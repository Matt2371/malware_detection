### CODE FOR FEATURE SELECTION ###
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestClassifier

class rf_feature_selection:
    """Random Forest importance score feature selection"""
    def __init__(self):
        self.model = RandomForestClassifier() # RF model to calculate importance scores
        self.sorted_features = [] # features sorted by importance (descending)
        self.sorted_scores = [] # importance scores corresponding to the sorted features
        self.isfit = False # keep track if RF model is fitted
        return
    
    def fit(self, X, y):
        """Fit the RF model to calculate importance scores"""
        self.model.fit(X, y)
        self.isfit = True
        
        # Create pandas series of importance scores indexed by its corresponding feature
        feat_importances = pd.Series(self.model.feature_importances_, index=X.columns)
        # Sort the feature importances in descending order and save results
        feat_importances = feat_importances.sort_values(ascending=False)
        self.sorted_features = feat_importances.index.tolist()
        self.sorted_scores = feat_importances.tolist()
        return
    
    def select(self, top_n=25):
        """Select the top n most important RF features"""
        if self.fit == False:
            raise Exception("RF has not been fitted")
        
        return self.sorted_features[:top_n]
